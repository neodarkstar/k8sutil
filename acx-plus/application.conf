acx-plus-tm {
  appClassId = "ACXPlusTransactionMonitor" // should always be the same
  appClassIdInstance = "TM_DEV"
  appClassIdInstance = ${?APP_CLASS_ID_INSTANCE}

  node-group {
    id = "NG1"
    id = ${?HOSTNAME}

    // types: KafkaNode (specific to LagoMessages)
    group-type = "KafkaNode"

    // delegate init strategy name (case insensitive)
    // NORMAL - normal flow (throttler delegate -> delegateToEventHandler -> registration -> operation -> deregistration)
    // DEBUG_LOG_ONLY_CHAIN - debug just log (tee delegate (logs) -> delegateToEventHandler -> tee event handler (logs))
    // see KafkaNodeDelegateInitStrategy for more options
    // DEBUG_LOG_WITH_THROTTLING_CHAIN - similar to normal expcept the the operation handler is replaced with a logging
    // tee handler (throttler delegate -> delegateToEventHandler -> registration -> tee handler (log) -> deregistration)
    kafkaNodeDelegateInitStrategy = "NORMAL"

    // limit on the context reactor queue
    contextReactorQueueCapacity = 10000

    // number of fixed threads in the context thread pool
    contextThreadPoolSize = 400

    // maximum number of tasks in wait in the context pool queue
    contextThreadPoolQueueCapacity = 10000

    // context scheduler core pool size
    contextSchedulerCorePoolSize = 4

    // context scheduler queue capacity
    contextSchedulerQueueCapacity = 10000

    // description of node families
    // family = "metadata" | "derived" | "txn"
    node-families: [
      {
        family = metadata
        instances = 1

        kafka.bootstrap.servers = "172.22.4.61:9092,172.22.5.61:9092,172.22.6.61:9092"
        kafka.topic = ac.init.metadata.santander50k_auto
        kafka.pollTimeoutMS = 30000
        kafka.group.id = santander50k_1_john_MD
        kafka.max.partition.fetch.bytes = 157286400
        kafka.fetch.max.bytes = 314572800
        kafka.max.poll.records = 100
        kafka.auto.offset.reset = "earliest"
        kafka.session.timeout.ms = 60000
        kafka.heartbeat.interval.ms = 20000
      }
    ]

    kafka-throttler: {
      maxBytes = 314572800
      maxMessageCount = 101
    }

    consistency-engine: {
      maxSize = 10000
      maxBusyWaitMs = 5000
      busyWaitCheckAfterMs = 10000
      checksPeriodMs = 5000
      expiry = 300000
    }

    continuous-retry: {
      logErrorAfterRetries = 30
      pauseBetweenRetriesMillis = 100
      giveUpAfterMillis = 600000
    }

    core {
        include "core.conf"
    }

    merkleTreeController {
        store {
            type = "restauth"
            apiHosts = "http://merkle:8080/v1"
            username = ""
            username = ${?MERKLE_CONTROLLER_STORE_USERNAME}
            password = ""
            password = ${?MERKLE_CONTROLLER_STORE_PASSWORD}
            expirationSeconds = "86400"
            pauseBetweenRetries = "500"
        }
    }
  }
}